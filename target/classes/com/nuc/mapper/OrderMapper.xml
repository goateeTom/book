<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nuc.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="com.nuc.pojo.Order">
    <id column="oid" jdbcType="CHAR" property="oid" />
    <result column="ordertime" jdbcType="CHAR" property="ordertime" />
    <result column="total" jdbcType="DECIMAL" property="total" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="uid" jdbcType="CHAR" property="uid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    oid, ordertime, total, `status`, address, uid
  </sql>
  <select id="selectByExample" parameterType="com.nuc.pojo.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `order`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
     <if test="startRow != null and pageSize != null and pageSize != 0">  
  limit #{startRow,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}  
</if>  
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `order`
    where oid = #{oid,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from `order`
    where oid = #{oid,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.nuc.pojo.OrderExample">
    delete from `order`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nuc.pojo.Order">
    insert into `order` (oid, ordertime, total, 
      `status`, address, uid)
    values (#{oid,jdbcType=CHAR}, #{ordertime,jdbcType=CHAR}, #{total,jdbcType=DECIMAL}, 
      #{status,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{uid,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nuc.pojo.Order">
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        oid,
      </if>
      <if test="ordertime != null">
        ordertime,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="uid != null">
        uid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        #{oid,jdbcType=CHAR},
      </if>
      <if test="ordertime != null">
        #{ordertime,jdbcType=CHAR},
      </if>
      <if test="total != null">
        #{total,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nuc.pojo.OrderExample" resultType="java.lang.Long">
    select count(*) from `order`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `order`
    <set>
      <if test="record.oid != null">
        oid = #{record.oid,jdbcType=CHAR},
      </if>
      <if test="record.ordertime != null">
        ordertime = #{record.ordertime,jdbcType=CHAR},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `order`
    set oid = #{record.oid,jdbcType=CHAR},
      ordertime = #{record.ordertime,jdbcType=CHAR},
      total = #{record.total,jdbcType=DECIMAL},
      `status` = #{record.status,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      uid = #{record.uid,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nuc.pojo.Order">
    update `order`
    <set>
      <if test="ordertime != null">
        ordertime = #{ordertime,jdbcType=CHAR},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=CHAR},
      </if>
    </set>
    where oid = #{oid,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nuc.pojo.Order">
    update `order`
    set ordertime = #{ordertime,jdbcType=CHAR},
      total = #{total,jdbcType=DECIMAL},
      `status` = #{status,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=CHAR}
    where oid = #{oid,jdbcType=CHAR}
  </update>
</mapper>